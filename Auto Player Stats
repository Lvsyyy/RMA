local function updateBoothText(text)
    local r = game:GetService("ReplicatedStorage"):WaitForChild("CustomiseBooth")
    r:FireServer("Update", {
        DescriptionText = text,
        ImageId = 0
    })
end
updateBoothText("Name:")
game:GetService("ReplicatedStorage"):WaitForChild("RequestData"):FireServer("Details", game.Players.LocalPlayer)

local function getPlayerStats(player)
    local playerID = player
    game:GetService("ReplicatedStorage"):WaitForChild("RequestData"):FireServer("Details", playerID)

    wait(0.5)
    game.Players.LocalPlayer.PlayerGui.MainGui.DetailsFrame.Visible = false
    wait(6)

    local ratingsGivenText = game.Players.LocalPlayer.PlayerGui.MainGui.DetailsFrame.RatingsGivenText
    local ratingsGiven = ratingsGivenText.Text:sub(ratingsGivenText.Text:find("<b>Ratings Given: </b>") + 22)

    local ratingsReceivedText = game.Players.LocalPlayer.PlayerGui.MainGui.DetailsFrame.RatingsReceivedText
    local ratingsReceived = ratingsReceivedText.Text:sub(ratingsReceivedText.Text:find("<b>Ratings Received: </b>") + 25)

    local serverRankingText = game.Players.LocalPlayer.PlayerGui.MainGui.DetailsFrame.ServerRankingText
    local serverRanking = serverRankingText.Text:sub(serverRankingText.Text:find("<b>Server Ranking: </b>") + 23)
    local leftNum, rightNum = string.match(serverRanking, "(%d+) of (%d+)")
    if leftNum and rightNum then
        serverRanking = leftNum .. "/" .. rightNum
    end

    local avatarValueText = game.Players.LocalPlayer.PlayerGui.MainGui.DetailsFrame.AvatarValueText
    local startIndex, endIndex = string.find(avatarValueText.Text, "<b>Avatar Value: </b>")
    local avatarValue = string.sub(avatarValueText.Text, endIndex + 1)
    avatarValue = string.sub(avatarValue, 1, string.find(avatarValue, " Robux") - 1)
        
    local name = "Name: " .. playerID.DisplayName .. "\n"
    local age = "Agxe: " .. string.format("%.2f", playerID.AccountAge / 365) .. " Years\n"
    local value = "Value: " .. avatarValue .. " rbx\n"
    local ranking = "Ranking: " .. serverRanking .. "\n"
    local ratingsReceivedStr = "Ratings Received: " .. ratingsReceived .. "\n"
    local ratingsGivenStr = "Ratings Given: " .. ratingsGiven
        
    local totalCharacters = string.len(name .. age .. value .. ranking .. ratingsReceivedStr .. ratingsGivenStr)
    while totalCharacters > 128 do
        name = name:sub(1, #name - 1)
        totalCharacters = string.len(name .. age .. value .. ranking .. ratingsReceivedStr .. ratingsGivenStr)
    end
        
    updateBoothText(name .. "\n" .. age .. value .. ranking .. ratingsReceivedStr .. ratingsGivenStr)
end

local function isPlayerInTriggerDistance(player)
    local booths = game.Workspace:GetDescendants()
    for _, booth in ipairs(booths) do
        if booth.Name == "Booth" then
            local desc = booth.Banner.SurfaceGui.Frame.Description
            local tabletop = desc.Parent.Parent.Parent.Parent.Tabletop
            if desc.Text:find("Name:") then
                if not tabletop then
                    return false
                end
                local detectionPosition = tabletop.Position
                local detectionArea = tabletop.Size + Vector3.new(2, 0.5, 5)
                local playerCharacter = player.Character
                if not playerCharacter then
                    return false
                end
                local playerHumanoidRootPart = playerCharacter:FindFirstChild("HumanoidRootPart")
                if not playerHumanoidRootPart then
                    return false
                end
                local playerPosition = playerHumanoidRootPart.Position
                local distance = (playerPosition - detectionPosition).Magnitude
                if distance <= detectionArea.Magnitude / 2 then
                    return true
                end
            end
        end
    end
    return false
end

while true do
    local playerFound = false
    for _, player in ipairs(game.Players:GetPlayers()) do
        if isPlayerInTriggerDistance(player) then
            getPlayerStats(player)
            playerFound = true
            break
        end
    end
    if not playerFound then
        wait(1)
    end
end
